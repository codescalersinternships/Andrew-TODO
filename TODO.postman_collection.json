{
	"info": {
		"_postman_id": "0369af56-3963-465d-9ca0-3ec5da5ba929",
		"name": "TODO",
		"description": "this is ToDo API project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22208572"
	},
	"item": [
		{
			"name": "add a new item to the todo list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.test(\"added item is right\", function () {",
							"    pm.expect(response.Item).to.equal(\"postman test\")",
							"});",
							"",
							"pm.test(\"completed is right\", function () {",
							"    pm.expect(response.Completed).to.equal(false)",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\"postman test\"",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": [
				{
					"name": "todo is sucessfult created",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "internal server error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get a todo item by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.test(\"item is right\", function () {",
							"    pm.expect(response.Item).to.equal(\"postman test\")",
							"});",
							"",
							"pm.test(\"completed is right\", function () {",
							"    pm.expect(response.Completed).to.equal(false)",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"",
							"pm.sendRequest(\"localhost:8080/todos/-10\", function (err, response) { ",
							"    pm.test(\"not found id\", function () {",
							"    pm.expect(response.code).to.equal(404)",
							"});",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/invalid\", function (err, response) { ",
							"    pm.test(\"invalid id\", function () {",
							"    pm.expect(response.code).to.equal(400)",
							"});",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1",
							"description": "(Required) todo ID"
						}
					]
				}
			},
			"response": [
				{
					"name": "ok",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request entered id is not a string",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "update todo item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/invalid\", function (err, response) { ",
							"    pm.test(\"invalid id\", function () {",
							"    pm.expect(response.code).to.equal(400)",
							"});",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/-10\", function (err, response) { ",
							"    pm.test(\"not found id\", function () {",
							"    pm.expect(response.code).to.equal(404)",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\"postman test update\"",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/todos/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1",
							"description": "(Required) todo ID"
						}
					]
				}
			},
			"response": [
				{
					"name": "Accepted",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request entered id is not a string",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "internal server error",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get a todo item by ID Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.test(\"item is right\", function () {",
							"    pm.expect(response.Item).to.equal(\"postman test update\")",
							"});",
							"",
							"pm.test(\"completed is right\", function () {",
							"    pm.expect(response.Completed).to.equal(false)",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"",
							"pm.sendRequest(\"localhost:8080/todos/-10\", function (err, response) { ",
							"    pm.test(\"not found id\", function () {",
							"    pm.expect(response.code).to.equal(404)",
							"});",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/invalid\", function (err, response) { ",
							"    pm.test(\"invalid id\", function () {",
							"    pm.expect(response.code).to.equal(400)",
							"});",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1",
							"description": "(Required) todo ID"
						}
					]
				}
			},
			"response": [
				{
					"name": "ok",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request entered id is not a string",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "update todo status item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/invalid\", function (err, response) { ",
							"    pm.test(\"invalid id\", function () {",
							"    pm.expect(response.code).to.equal(400)",
							"});",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/-10\", function (err, response) { ",
							"    pm.test(\"not found id\", function () {",
							"    pm.expect(response.code).to.equal(404)",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1",
							"description": "(Required) todo ID"
						}
					]
				}
			},
			"response": [
				{
					"name": "Accepted",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Accepted",
					"code": 202,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request entered id is not a string",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "internal server error",
					"originalRequest": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get a todo item by ID Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.test(\"item is right\", function () {",
							"    pm.expect(response.Item).to.equal(\"postman test update\")",
							"});",
							"",
							"pm.test(\"completed is right\", function () {",
							"    pm.expect(response.Completed).to.equal(true)",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"",
							"pm.sendRequest(\"localhost:8080/todos/-10\", function (err, response) { ",
							"    pm.test(\"not found id\", function () {",
							"    pm.expect(response.code).to.equal(404)",
							"});",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/invalid\", function (err, response) { ",
							"    pm.test(\"invalid id\", function () {",
							"    pm.expect(response.code).to.equal(400)",
							"});",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1",
							"description": "(Required) todo ID"
						}
					]
				}
			},
			"response": [
				{
					"name": "ok",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request entered id is not a string",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "delete a todo item by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/invalid\", function (err, response) { ",
							"    pm.test(\"invalid id\", function () {",
							"    pm.expect(response.code).to.equal(400)",
							"});",
							"});",
							"",
							"pm.sendRequest(\"localhost:8080/todos/-10\", function (err, response) { ",
							"    pm.test(\"not found id\", function () {",
							"    pm.expect(response.code).to.equal(404)",
							"});",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "1",
							"description": "(Required) todo ID"
						}
					]
				}
			},
			"response": [
				{
					"name": "No response",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Bad Request entered id is not a string",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "Not Found",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "40764141",
									"description": "(Required) todo ID"
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "get all todos",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 3000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);",
							"});",
							"",
							"const response = pm.response.json()",
							"",
							"pm.test(\"item is right\", function () {",
							"    pm.expect(response.Item).to.equal()",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/todos",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"todos"
					]
				}
			},
			"response": [
				{
					"name": "ok",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				},
				{
					"name": "internal server error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "text",
					"header": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080",
			"type": "string"
		}
	]
}